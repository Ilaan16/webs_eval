version: '3.8'

services:
  api-rest:
    build: ./api-rest
    container_name: api-rest
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=pguser
      - DATABASE_PASSWORD=pgpass
      - DATABASE_NAME=pgdb
      - KEYCLOAK_URL=http://keycloak:8080
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin

  api-graphql:
    build: ./api-graphql
    container_name: api-graphql
    ports:
      - "3001:3001"
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=pguser
      - DATABASE_PASSWORD=pgpass
      - DATABASE_NAME=pgdb
      - KEYCLOAK_URL=http://keycloak:8080
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin

  grpc-service:
    build: ./grpc-service
    container_name: grpc-service
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=pguser
      - DATABASE_PASSWORD=pgpass
      - DATABASE_NAME=pgdb
      - KEYCLOAK_URL=http://keycloak:8080
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin

  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpass
      POSTGRES_DB: pgdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
