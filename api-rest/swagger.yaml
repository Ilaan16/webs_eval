openapi: 3.0.0
info:
  title: API REST pour la gestion de réservations
  description: API REST pour la gestion des utilisateurs, des chambres et des réservations
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Serveur de développement
paths:
  /auth/login:
    post:
      summary: Connexion d'un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Connexion réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '401':
          description: Identifiants invalides
  
  /users:
    get:
      summary: Récupérer la liste des utilisateurs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des utilisateurs récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Créer un nouvel utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: Utilisateur créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  
  /rooms:
    get:
      summary: Récupérer la liste des chambres
      responses:
        '200':
          description: Liste des chambres récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
  
  /reservations:
    post:
      summary: Créer une nouvelle réservation
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReservationDto'
      responses:
        '201':
          description: Réservation créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    CreateUserDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - email
        - password
        - firstName
        - lastName
    
    Room:
      type: object
      properties:
        id:
          type: integer
        number:
          type: string
        type:
          type: string
        price:
          type: number
        available:
          type: boolean
    
    Reservation:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        roomId:
          type: integer
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        status:
          type: string
          enum: [pending, confirmed, cancelled]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    CreateReservationDto:
      type: object
      properties:
        roomId:
          type: integer
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
      required:
        - roomId
        - startDate
        - endDate
